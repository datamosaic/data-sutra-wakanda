/** * SA API * @version 1 * @modified 2014 July 18 */var SA = new Object();SA.file = {};/** * Copy file from location 1 to location 2 * * @param {String} from The source file * @param {String} to Directory (inside current project's WebFolder) where to copy file * @public * @returns {File} */SA.file.copy = function copyFile(from,to) {	try {		// were slashes included in to or not?		var needSlash = '';		if (to && to[to.length - 1] != '/') {			needSlash = '/';		}				// get the file name (extension included)		var sourceName = File(from).name;		// destination file path (as string)		var destination = File(FileSystemSync("WEBFOLDER").path + to + needSlash + sourceName);				// folder must be created in order to copy file		if (!destination.parent.exists) {			destination.parent.create();		}				File(from).copyTo(destination,true);				// there is a file in this location, chances are the copy completed successfully		if (destination.exists) {			return destination;		}	}	catch (e) {			}};/** * Move file from location 1 to location 2 * * @param {String} from The source file * @param {String} to Directory (inside current project's WebFolder) where to copy file * @public * @returns {File} */SA.file.move = function moveFile(from,to) {	try {		// were slashes included in to or not?		var needSlash = '';		if (to && to[to.length - 1] != '/') {			needSlash = '/';		}				// get the file name (extension included)		var sourceName = File(from).name;		// destination file path (as string)		var destination = File(FileSystemSync("WEBFOLDER").path + to + needSlash + sourceName);				// folder must be created in order to copy file		if (!destination.parent.exists) {			destination.parent.create();		}				File(from).moveTo(destination,true);				// there is a file in this location, chances are the move completed successfully		if (destination.exists) {			return destination;		}	}	catch (e) {			}};/** * Copy file from location 1 to location 2 * * @param {String} file The path to the file to delete * @public * @returns {File} */SA.file.remove = function deleteFile(file) {	try {		if (File(file).exists || Folder(file).exists) {			var success = File(file).remove();						// path to file just deleted (everything went through well)			if (success) {				return file;			}		}	}	catch (e) {			}};module.exports = SA;