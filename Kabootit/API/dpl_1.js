/** * DPL API * @version 1 * @modified 2015 June 22 */var DPL = {	server : new Object()};// uptime macosx// 13:58  up  1:06, 3 users, load averages: 1.28 1.13 1.03// uptime ubuntu// 12:58:12 up 15 days,  1:33,  2 users,  load average: 0.01, 0.02, 0.05var STR_UPTIME_LOAD = {	macosx: "load averages:",	ubuntu: "load average:"};/** * Get stats of this server * @public * @returns {Object} */DPL.server.getStats = function getServerStats(){	// run uptime command	var uptimeResult = SystemWorker.exec( "uptime" );	if( uptimeResult === null )	{		console.log( "DPL.server.getStats: couldn't execute uptime" );		return false;	}	var uptimeOutput = uptimeResult.output.toString();		// look for load string	var loadTrio = null;	if( uptimeOutput.indexOf(STR_UPTIME_LOAD.macosx) >= 0 )	{		loadTrio = uptimeOutput.split(STR_UPTIME_LOAD.macosx)[1].trim().split(' ');	}	else if( uptimeOutput.indexOf(STR_UPTIME_LOAD.ubuntu) >= 0 )	{		loadTrio = uptimeOutput.split(STR_UPTIME_LOAD.ubuntu)[1].trim().split(', ');	}	else	{		console.log("DPL.server.getStats: couldn't parse uptime results");		return false;	}		// run date command	// same on macosx and ubuntu	var dateResult = SystemWorker.exec( 'date -u "+%F %T"' );  // UTC	if( dateResult === null )	{		console.log( "DPL.server.getStats: couldn't execute date" );		return false;	}	var stamp = dateResult.output.toString().trim().split(" ");	// package results of load and date into object	var data = {		stampString: stamp,		avgOneMin: parseFloat(loadTrio[0]),		avgFiveMin: parseFloat(loadTrio[1]),		avgFifteenMin: parseFloat(loadTrio[2])	};	data.plaintext = data.stampString + " " + data.avgOneMin + " " + data.avgFiveMin + " " + data.avgFifteenMin;	return data;};module.exports = DPL;