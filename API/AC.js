/** * Public API variable */var AC = {	'name': 'AC'};/** * Access and Control helper functions */var security = require( (FileSystemSync("PROJECT").path.split('/').slice(0,FileSystemSync("PROJECT").path.split('/').length-2).join('/')) + '/AccessControl' + '/API/security_helper.js' );/** * Called from this project (require) */var module = module || new Object();if (module && module.exports) {	module.exports = AC;}/** * Called from other projects (xhr) * @param {HTTPRequest} request * @param {HTTPResponse} response * @return {JSON} Result of API call */function controller(request, response) {	return security.controller(AC, request, response);}/** * Brokers the call to external (other projects) API * @param {String} method The way you would normally call a method if it were required in....example: "AC.organization.getAll" * @param {Array} arguments Array of arguments to be passed to this method * @return Whatever the call returns */AC.external = function external(method, arguments) {	return security.external(AC, method, arguments);}/** * API: public methods */AC.organization = {};AC.organization.getAll = function get() {	return ds.Organization.all();};AC.organization.removeAll = function remove() {	return ds.Organization.remove();};/** * Private functions, variables and CONSTANTS */function anonymous(xx) {	}// check security of this APIsecurity.init("AC",AC);