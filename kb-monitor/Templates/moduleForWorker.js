exports.workerTemplateStart = function workerTemplateStart (){	var worker = new SharedWorker( "Workers/workerTemplate.js", "workerTemplate" );  // file, name of worker	var port = worker.port;	port.postMessage( { command: "start" } );}exports.workerTemplateStop = function workerTemplateStop (){	var worker = new SharedWorker( "Workers/workerTemplate.js", "workerTemplate" );	var port = worker.port;	port.postMessage( { command: "stop" } );}exports.workerTemplateSetSomething = function workerTemplateSetSomething( somethingToSet ){	var worker = new SharedWorker( "Workers/workerTemplate.js", "workerTemplate" );	var port = worker.port;	port.postMessage( { command: "setSomething", payload: somethingToSet } );}exports.workerPollingGetSomething = function workerPollingGetSomething (){	var worker = new SharedWorker( "Workers/workerTemplate.js", "workerTemplate" );	var port = worker.port;  // port is bidirectional	var somethingFromWorker = null;	port.onmessage = function(event)	{		var message = event.data;		switch(message.response)		{			case 'something':				somethingFromWorker = message.payload;				break;		}		close();  // exit wait() below	}	port.postMessage( { command: "getSomething" } );	wait();  // block and stay open for callback above	return somethingFromWorker;}