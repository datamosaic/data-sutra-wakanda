//var company = ds.Companyz.all()[1].PeoplezCollection[0].name_first;//company.PeoplezCollection[0].name_first//company//var people = ds.Peoplez.all()[0]//hasRecords(people, "Companyz.PeoplezCollection[1].Companyz");//people.Companyz.PeoplezCollection[2].Companyzvar CODE = require("../Kabootit/API/code.js");var people = ds.Peoplez.all()[0];CODE.utils.hasRecords(people, "Companyz.PeoplezCollection[0].Companyz");function hasRecords(reference, relations) {	// relations param a valid string	if ( relations && typeof relations !== "string" ) {		return false	}			// reference param valid entity or entity collection	if ( !(reference && (typeof reference.getStamp == "function" || typeof reference.count == "function" )) ) {		return false	}		var items = relations.split(".");	// last pass	if ( items.length == 1 ) {		// valid relation pass through		try {			if ( eval("reference." + items[0]) ) {				return true;			}			else {				return false;			}		} catch (e) {			return false;		}		}	else {  // recurse		try {			if ( eval("reference." + items[0]) ) {				var newRelations = items.splice(1);				newRelations = newRelations.join(".");				return hasRecords(eval("reference." + items[0]), newRelations);			}			else {				return false;			}		} catch (e) {			return false;		}		}	}